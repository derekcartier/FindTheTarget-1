{"version":3,"sources":["decompose.js","possibleResults.js","hiddenNumber.js","index.js"],"names":["concat","element","array","length","map","e","decompose","number","substr","possibleResults","decomposition","results","indexesUsedForResult","operations","loop","index","val","stepsForVal","indexes","i","add","push","sub","Math","abs","recontructHost","usedIndexes","newHost","doesItStartWith","potentialStart","target","answer","newTarget","usedFirst","usedLast","ReactDOM","render","useState","host","state","setState","onChange","name","value","result","hiddenNumber","reset","decompositions","d","r","filter","usesFirst","indexOf","splice","success","steps","type","autoFocus","className","step","key","document","getElementById"],"mappings":"2MAEA,SAASA,EAAOC,EAASC,GACvB,OAAqB,IAAjBA,EAAMC,OACD,CAAC,CAACF,IAGJC,EAAME,KAAI,SAAAC,GAAC,OAAKJ,GAAL,mBAAiBI,OAGtB,SAASC,EAAUC,GAChC,OAAsB,IAAlBA,EAAOJ,OACF,GAGa,IAAlBI,EAAOJ,OAEF,CAAC,CAACI,IAGW,IAAlBA,EAAOJ,OAEF,CAAC,CAACI,EAAO,GAAIA,EAAO,IAAK,CAACA,IAGb,IAAlBA,EAAOJ,OACF,CACL,CAACI,EAAOC,OAAO,EAAG,GAAID,EAAOC,OAAO,EAAG,GAAID,EAAOC,OAAO,EAAG,IAC5D,CAACD,EAAOC,OAAO,EAAG,GAAID,EAAOC,OAAO,EAAG,IACvC,CAACD,EAAOC,OAAO,EAAG,GAAID,EAAOC,OAAO,EAAG,IACvC,CAACD,IAIC,GAAN,mBACKP,EAAOO,EAAOC,OAAO,EAAG,GAAIF,EAAUC,EAAOC,OAAO,MADzD,YAEKR,EAAOO,EAAOC,OAAO,EAAG,GAAIF,EAAUC,EAAOC,OAAO,MAFzD,YAGKR,EAAOO,EAAOC,OAAO,EAAG,GAAIF,EAAUC,EAAOC,OAAO,MAHzD,YAIKR,EAAOO,EAAOC,OAAO,EAAG,GAAIF,EAAUC,EAAOC,OAAO,OCtC5C,SAASC,EAAgBC,GACtC,IAAMC,EAAU,GACVC,EAAuB,GACvBC,EAAa,GAgCnB,OA9BA,SAASC,EAAKJ,EAAeK,EAAOC,EAAKC,GACvC,IADmE,IAAfC,EAAc,uDAAJ,GACrDC,EAAIJ,EAAQ,EAAGI,EAAIT,EAAcP,OAAQgB,IAAK,CACrD,IAAMC,EAAMJ,EAAM,EAAIN,EAAcS,GACpCR,EAAQU,KAAR,UAAgBD,IAChBR,EAAqBS,KAArB,sBAA8BH,GAA9B,CAAuCH,EAAOI,KAC9CN,EAAWQ,KAAX,UAAmBJ,EAAnB,aAAmCD,EAAnC,cAA4CN,EAAcS,GAA1D,cAAkEC,EAAlE,MACAN,EACEJ,EACAS,EACAH,EAAM,EAAIN,EAAcS,GAHtB,UAICF,EAJD,aAIiBD,EAJjB,cAI0BN,EAAcS,GAJxC,cAIgDC,EAJhD,2BAKEF,GALF,CAKWH,KAGf,IAAMO,EAAMC,KAAKC,IAAIR,EAAM,EAAIN,EAAcS,IAC7CR,EAAQU,KAAR,UAAgBC,IAChBV,EAAqBS,KAArB,sBAA8BH,GAA9B,CAAuCH,EAAOI,KAC9CN,EAAWQ,KAAX,UAAmBJ,EAAnB,aAAmCD,EAAnC,cAA4CN,EAAcS,GAA1D,cAAkEG,EAAlE,MACAR,EACEJ,EACAS,EACAI,KAAKC,IAAIR,EAAM,EAAIN,EAAcS,IAH/B,UAICF,EAJD,aAIiBD,EAJjB,cAI0BN,EAAcS,GAJxC,cAIgDG,EAJhD,2BAKEJ,GALF,CAKWH,MAKnBD,CAAKJ,EAAe,EAAG,EAAIA,EAAc,GAAI,IAEtC,CAAEC,UAASC,uBAAsBC,cC9B1C,SAASY,EAAef,EAAegB,GACrC,IAAIC,EAAU,GADoC,uBAElD,YAAcD,EAAd,+CAA2B,CACzBC,GAAWjB,EADc,UAFuB,kFAKlD,IACE,IAAIS,EAAIO,EAAYA,EAAYvB,OAAS,GAAK,EAC9CgB,EAAIT,EAAcP,OAClBgB,IAEAQ,GAAWjB,EAAcS,GAE3B,OAAOQ,EAMF,SAASC,EAAgBC,EAAgBC,GAC9C,IAAIC,EAASD,EAAOtB,OAAO,EAAGqB,EAAe1B,UAAY0B,EACrDG,EAAY,GAIhB,OAHID,IACFC,EAAYF,EAAOtB,OAAOqB,EAAe1B,SAEpC,CAAE4B,SAAQC,aAGnB,IAAIC,GAAY,EACZC,GAAW,ECyBfC,IAASC,OAAO,mBAnDhB,WAAgB,IAAD,EACaC,mBAAS,CAAEP,OAAQ,GAAIQ,KAAM,KAD1C,mBACNC,EADM,KACCC,EADD,KAGPC,EAAW,SAAC,GAAiC,IAAD,IAA9BX,OAAUY,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,MAClCH,EAAS,eAAKD,EAAN,eAAcG,EAAOC,MAGzBC,EACJL,EAAMT,QAAUS,EAAMD,MDoBX,SAASO,EAAaf,EAAQQ,GAAsB,IAAhBQ,EAAe,wDAC5DA,IACFb,GAAY,EACZC,GAAW,GAGb,IAAIa,EAAiBzC,EAAUgC,GANiC,uBAQhE,IARgE,IAQhE,EARgE,iBAQvDU,EARuD,UASVvC,EAAgBuC,GAA9DrC,EATwD,EASxDA,QAASC,EAT+C,EAS/CA,qBAAsBC,EATyB,EASzBA,WAarC,IAAK,IAAIoC,KAXJhB,GACHrB,EAAqBsC,QAAO,SAAChC,EAASC,GACpC,IAAMgC,EAAYjC,EAAQkC,QAAQ,IAAM,EAIxC,OAHKD,GACHxC,EAAQ0C,OAAOlC,GAEVgC,KAGXlB,GAAY,EAEEtB,EAAS,CAAC,IAAD,EACOiB,EAAgBjB,EAAQsC,GAAInB,GAAlDC,EADe,EACfA,OAAQC,EADO,EACPA,UACd,GAAID,EAAQ,CAcV,GAbKG,IACHA,EACEtB,EAAqBqC,GAAGrC,EAAqBqC,GAAG9C,OAAS,KACzD6C,EAAE7C,OAAS,GAUG,KAAd6B,GAAoBE,EACtB,MAAM,CAAN,EAAO,CAAEoB,SAAS,EAAMC,MAAO,CAAC1C,EAAWoC,MAE7C,IAjBU,EAkBeJ,EAAab,EADxBP,EAAeuB,EAAGpC,EAAqBqC,KAC/CK,EAlBI,EAkBJA,QAASC,EAlBL,EAkBKA,MACf,GAAID,EACF,MAAM,CAAN,EAAO,CAAEA,UAASC,MAAM,CAAE1C,EAAWoC,IAAd,mBAAqBM,SApCpD,EAAcR,EAAd,+CAA8B,CAAC,IAAD,yCARkC,kFAkDhE,MAAO,CAAEO,SAAS,EAAOC,MAAO,ICtEAV,CAAaN,EAAMT,OAAQS,EAAMD,MAAM,GACvE,OACE,6BACE,+CACA,6BACE,+BACE,yCACA,2BACEkB,KAAK,SACLd,KAAK,SACLC,MAAOJ,EAAMT,OACbW,SAAUA,EACVgB,WAAW,KAGf,+BACE,uCACA,2BACED,KAAK,SACLd,KAAK,OACLC,MAAOJ,EAAMD,KACbG,SAAUA,KAGbG,GACC,yBAAKc,UAAS,iBAAYd,EAAOU,SAAW,YAC1C,8BAAOV,EAAOU,QAAU,UAAY,QACnCV,EAAOU,SACN,4BACGV,EAAOW,MAAMnD,KAAI,SAACuD,EAAM5C,GAAP,OAChB,wBAAI6C,IAAK7C,GACP,6BAAM4C,aAYV,MAASE,SAASC,eAAe,U","file":"static/js/main.21a3804e.chunk.js","sourcesContent":["// precondition : array has 2 dimensions\n// concat adds element in the beginning of each array component\nfunction concat(element, array) {\n  if (array.length === 0) {\n    return [[element]];\n  }\n\n  return array.map(e => [element, ...e]);\n}\n\nexport default function decompose(number) {\n  if (number.length === 0) {\n    return [];\n  }\n\n  if (number.length === 1) {\n    //  console.log(\"case 1 : \", [[number]]);\n    return [[number]];\n  }\n\n  if (number.length === 2) {\n    //console.log(\"case 2 : \", [[number[0], number[1]], [number]]);\n    return [[number[0], number[1]], [number]];\n  }\n\n  if (number.length === 3) {\n    return [\n      [number.substr(0, 1), number.substr(1, 1), number.substr(2, 1)],\n      [number.substr(0, 1), number.substr(1, 2)],\n      [number.substr(0, 2), number.substr(2, 1)],\n      [number]\n    ];\n  }\n\n  return [\n    ...concat(number.substr(0, 1), decompose(number.substr(1))),\n    ...concat(number.substr(0, 2), decompose(number.substr(2))),\n    ...concat(number.substr(0, 3), decompose(number.substr(3))),\n    ...concat(number.substr(0, 4), decompose(number.substr(4)))\n  ];\n}\n","export default function possibleResults(decomposition) {\n  const results = [];\n  const indexesUsedForResult = [];\n  const operations = [];\n\n  function loop(decomposition, index, val, stepsForVal, indexes = []) {\n    for (let i = index + 1; i < decomposition.length; i++) {\n      const add = val + 1 * decomposition[i];\n      results.push(`${add}`);\n      indexesUsedForResult.push([...indexes, index, i]);\n      operations.push(`${stepsForVal} (${val} + ${decomposition[i]} = ${add})`);\n      loop(\n        decomposition,\n        i,\n        val + 1 * decomposition[i],\n        `${stepsForVal} (${val} + ${decomposition[i]} = ${add})`,\n        [...indexes, index]\n      );\n\n      const sub = Math.abs(val - 1 * decomposition[i]);\n      results.push(`${sub}`);\n      indexesUsedForResult.push([...indexes, index, i]);\n      operations.push(`${stepsForVal} (${val} - ${decomposition[i]} = ${sub})`);\n      loop(\n        decomposition,\n        i,\n        Math.abs(val - 1 * decomposition[i]),\n        `${stepsForVal} (${val} - ${decomposition[i]} = ${sub})`,\n        [...indexes, index]\n      );\n    }\n  }\n\n  loop(decomposition, 0, 1 * decomposition[0], \"\");\n\n  return { results, indexesUsedForResult, operations };\n}\n","import decompose from \"./decompose\";\nimport possibleResults from \"./possibleResults\";\n\n// starts from a decomposition of a host and used indexes from the previous step\n// and recontructs the new host to work with\nfunction recontructHost(decomposition, usedIndexes) {\n  let newHost = \"\";\n  for (let i of usedIndexes) {\n    newHost += decomposition[i];\n  }\n  for (\n    let i = usedIndexes[usedIndexes.length - 1] + 1;\n    i < decomposition.length;\n    i++\n  ) {\n    newHost += decomposition[i];\n  }\n  return newHost;\n}\n\n// doesItStartWith verifies if target starts with potentialStart\n// In which case, answer is true and newTarget is the remaining part of target\n// Otherwise, answer is false and newTarget is empty\nexport function doesItStartWith(potentialStart, target) {\n  let answer = target.substr(0, potentialStart.length) === potentialStart;\n  let newTarget = \"\";\n  if (answer) {\n    newTarget = target.substr(potentialStart.length);\n  }\n  return { answer, newTarget };\n}\n\nlet usedFirst = false;\nlet usedLast = false;\n\nexport default function hiddenNumber(target, host, reset = false) {\n  if (reset) {\n    usedFirst = false;\n    usedLast = false;\n  }\n\n  let decompositions = decompose(host);\n\n  for (let d of decompositions) {\n    let { results, indexesUsedForResult, operations } = possibleResults(d);\n\n    if (!usedFirst) {\n      indexesUsedForResult.filter((indexes, i) => {\n        const usesFirst = indexes.indexOf(0) >= 0;\n        if (!usesFirst) {\n          results.splice(i);\n        }\n        return usesFirst;\n      });\n    }\n    usedFirst = true;\n\n    for (let r in results) {\n      let { answer, newTarget } = doesItStartWith(results[r], target);\n      if (answer) {\n        if (!usedLast) {\n          usedLast =\n            indexesUsedForResult[r][indexesUsedForResult[r].length - 1] ===\n            d.length - 1;\n        }\n        // console.log({\n        //   host,\n        //   step: operations[r],\n        //   potentialStart: results[r],\n        //   target,\n        //   newTarget,\n        //   indexes: indexesUsedForResult[r]\n        // });\n        if (newTarget === \"\" && usedLast) {\n          return { success: true, steps: [operations[r]] };\n        }\n        let newHost = recontructHost(d, indexesUsedForResult[r]);\n        let { success, steps } = hiddenNumber(newTarget, newHost);\n        if (success) {\n          return { success, steps: [operations[r], ...steps] };\n        }\n      }\n    }\n  }\n\n  return { success: false, steps: [] };\n}\n","import React, { useState } from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport \"./styles.css\";\n\nimport hiddenNumber from \"./hiddenNumber\";\n\nfunction App() {\n  const [state, setState] = useState({ target: \"\", host: \"\" });\n\n  const onChange = ({ target: { name, value } }) => {\n    setState({ ...state, [name]: value });\n  };\n\n  const result =\n    state.target && state.host && hiddenNumber(state.target, state.host, true);\n  return (\n    <div>\n      <h1>Find the target</h1>\n      <div>\n        <label>\n          <span>Target:</span>\n          <input\n            type=\"number\"\n            name=\"target\"\n            value={state.target}\n            onChange={onChange}\n            autoFocus={true}\n          />\n        </label>\n        <label>\n          <span>Host:</span>\n          <input\n            type=\"number\"\n            name=\"host\"\n            value={state.host}\n            onChange={onChange}\n          />\n        </label>\n        {result && (\n          <div className={`result ${result.success && \"SUCCESS\"}`}>\n            <span>{result.success ? \"SUCCESS\" : \"FAIL\"}</span>\n            {result.success && (\n              <ol>\n                {result.steps.map((step, index) => (\n                  <li key={index}>\n                    <pre>{step}</pre>\n                  </li>\n                ))}\n              </ol>\n            )}\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n//\n// console.clear();\n//\n// const tests = [\n//   // [\"2131\", \"39422\"],\n//   // [\"419\", \"10540\"],\n//   // [\"441\", \"10540\"],\n//   // [\"441\", \"10934\"],\n//   // [\"518\", \"10934\"],\n//   // [\"325\", \"6811\"],\n//   // [\"333\", \"10061\"],\n//   // [\"596\", \"5433\"],\n//   // [\"517\", \"11034\"],\n//   // [\"5\", \"12\"],\n//   // [\"52\", \"12\"],\n//   [\"10\", \"100\"],\n//   [\"100\", \"10\"]\n//   // [\"12\", \"5\"]\n// ];\n//\n// tests.forEach(([target, host]) => {\n//   let result = hiddenNumber(target, host);\n//   console.log({ host, target, result });\n// });\n"],"sourceRoot":""}